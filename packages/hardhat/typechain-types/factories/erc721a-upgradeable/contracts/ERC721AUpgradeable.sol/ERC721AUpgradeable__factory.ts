/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC721AUpgradeable,
  ERC721AUpgradeableInterface,
} from "../../../../erc721a-upgradeable/contracts/ERC721AUpgradeable.sol/ERC721AUpgradeable";

const _abi = [
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a39806100206000396000f3fe6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb465146102ab578063b88d4fde146102d4578063c87b56dd146102f0578063e985e9c51461032d576100dd565b80636352211e1461020657806370a082311461024357806395d89b4114610280576100dd565b8063095ea7b3116100bb578063095ea7b31461018757806318160ddd146101a357806323b872dd146101ce57806342842e0e146101ea576100dd565b806301ffc9a7146100e257806306fdde031461011f578063081812fc1461014a575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190611312565b61036a565b604051610116919061135a565b60405180910390f35b34801561012b57600080fd5b506101346103fc565b6040516101419190611405565b60405180910390f35b34801561015657600080fd5b50610171600480360381019061016c919061145d565b610497565b60405161017e91906114cb565b60405180910390f35b6101a1600480360381019061019c9190611512565b61051f565b005b3480156101af57600080fd5b506101b861052f565b6040516101c59190611561565b60405180910390f35b6101e860048036038101906101e3919061157c565b610558565b005b61020460048036038101906101ff919061157c565b6108b0565b005b34801561021257600080fd5b5061022d6004803603810190610228919061145d565b6108d0565b60405161023a91906114cb565b60405180910390f35b34801561024f57600080fd5b5061026a600480360381019061026591906115cf565b6108e2565b6040516102779190611561565b60405180910390f35b34801561028c57600080fd5b506102956109a3565b6040516102a29190611405565b60405180910390f35b3480156102b757600080fd5b506102d260048036038101906102cd9190611628565b610a3e565b005b6102ee60048036038101906102e9919061179d565b610b52565b005b3480156102fc57600080fd5b506103176004803603810190610312919061145d565b610bc5565b6040516103249190611405565b60405180910390f35b34801561033957600080fd5b50610354600480360381019061034f9190611820565b610c63565b604051610361919061135a565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c557506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f55750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6060610406610d00565b60020180546104149061188f565b80601f01602080910402602001604051908101604052809291908181526020018280546104409061188f565b801561048d5780601f106104625761010080835404028352916020019161048d565b820191906000526020600020905b81548152906001019060200180831161047057829003601f168201915b5050505050905090565b60006104a282610d2d565b6104d8576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e0610d00565b600601600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61052b82826001610d9e565b5050565b6000610539610ef3565b610541610d00565b6001015461054d610d00565b600001540303905090565b600061056382610ef8565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105ca576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806105d68461100b565b915091506105ec81876105e761103b565b611043565b61063857610601866105fc61103b565b610c63565b610637576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361069e576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106ab8686866001611087565b80156106b657600082555b6106be610d00565b60050160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550610715610d00565b60050160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506107968561077288888761108d565b7c0200000000000000000000000000000000000000000000000000000000176110b5565b61079e610d00565b60040160008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084160361084057600060018501905060006107ef610d00565b6004016000838152602001908152602001600020540361083e57610811610d00565b60000154811461083d5783610824610d00565b6004016000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46108a886868660016110e0565b505050505050565b6108cb83838360405180602001604052806000815250610b52565b505050565b60006108db82610ef8565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610949576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff61095a610d00565b60050160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b60606109ad610d00565b60030180546109bb9061188f565b80601f01602080910402602001604051908101604052809291908181526020018280546109e79061188f565b8015610a345780601f10610a0957610100808354040283529160200191610a34565b820191906000526020600020905b815481529060010190602001808311610a1757829003601f168201915b5050505050905090565b80610a47610d00565b6007016000610a5461103b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610b0161103b565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610b46919061135a565b60405180910390a35050565b610b5d848484610558565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610bbf57610b88848484846110e6565b610bbe576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610bd082610d2d565b610c06576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610c10611236565b90506000815103610c305760405180602001604052806000815250610c5b565b80610c3a8461124d565b604051602001610c4b9291906118fc565b6040516020818303038152906040525b915050919050565b6000610c6d610d00565b60070160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000807f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4090508091505090565b600081610d38610ef3565b11158015610d505750610d49610d00565b6000015482105b8015610d97575060007c0100000000000000000000000000000000000000000000000000000000610d7f610d00565b60040160008581526020019081526020016000205416145b9050919050565b6000610da9836108d0565b90508115610e34578073ffffffffffffffffffffffffffffffffffffffff16610dd061103b565b73ffffffffffffffffffffffffffffffffffffffff1614610e3357610dfc81610df761103b565b610c63565b610e32576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b83610e3d610d00565b600601600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a450505050565b600090565b600081610f03610ef3565b11610fd457610f10610d00565b600401600083815260200190815260200160002054905060007c0100000000000000000000000000000000000000000000000000000000821603610fd35760008103610fce57610f5e610d00565b600001548210610f9a576040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b610fa3610d00565b6004016000836001900393508381526020019081526020016000205490506000810361100657610f9b565b611006565b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000806000611018610d00565b600601600085815260200190815260200160002090508092508254915050915091565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e86110a486868461129d565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261110c61103b565b8786866040518563ffffffff1660e01b815260040161112e9493929190611975565b6020604051808303816000875af192505050801561116a57506040513d601f19601f8201168201806040525081019061116791906119d6565b60015b6111e3573d806000811461119a576040519150601f19603f3d011682016040523d82523d6000602084013e61119f565b606091505b5060008151036111db576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b60011561128857600184039350600a81066030018453600a8104905080611266575b50828103602084039350808452505050919050565b60009392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6112ef816112ba565b81146112fa57600080fd5b50565b60008135905061130c816112e6565b92915050565b600060208284031215611328576113276112b0565b5b6000611336848285016112fd565b91505092915050565b60008115159050919050565b6113548161133f565b82525050565b600060208201905061136f600083018461134b565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156113af578082015181840152602081019050611394565b60008484015250505050565b6000601f19601f8301169050919050565b60006113d782611375565b6113e18185611380565b93506113f1818560208601611391565b6113fa816113bb565b840191505092915050565b6000602082019050818103600083015261141f81846113cc565b905092915050565b6000819050919050565b61143a81611427565b811461144557600080fd5b50565b60008135905061145781611431565b92915050565b600060208284031215611473576114726112b0565b5b600061148184828501611448565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114b58261148a565b9050919050565b6114c5816114aa565b82525050565b60006020820190506114e060008301846114bc565b92915050565b6114ef816114aa565b81146114fa57600080fd5b50565b60008135905061150c816114e6565b92915050565b60008060408385031215611529576115286112b0565b5b6000611537858286016114fd565b925050602061154885828601611448565b9150509250929050565b61155b81611427565b82525050565b60006020820190506115766000830184611552565b92915050565b600080600060608486031215611595576115946112b0565b5b60006115a3868287016114fd565b93505060206115b4868287016114fd565b92505060406115c586828701611448565b9150509250925092565b6000602082840312156115e5576115e46112b0565b5b60006115f3848285016114fd565b91505092915050565b6116058161133f565b811461161057600080fd5b50565b600081359050611622816115fc565b92915050565b6000806040838503121561163f5761163e6112b0565b5b600061164d858286016114fd565b925050602061165e85828601611613565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116aa826113bb565b810181811067ffffffffffffffff821117156116c9576116c8611672565b5b80604052505050565b60006116dc6112a6565b90506116e882826116a1565b919050565b600067ffffffffffffffff82111561170857611707611672565b5b611711826113bb565b9050602081019050919050565b82818337600083830152505050565b600061174061173b846116ed565b6116d2565b90508281526020810184848401111561175c5761175b61166d565b5b61176784828561171e565b509392505050565b600082601f83011261178457611783611668565b5b813561179484826020860161172d565b91505092915050565b600080600080608085870312156117b7576117b66112b0565b5b60006117c5878288016114fd565b94505060206117d6878288016114fd565b93505060406117e787828801611448565b925050606085013567ffffffffffffffff811115611808576118076112b5565b5b6118148782880161176f565b91505092959194509250565b60008060408385031215611837576118366112b0565b5b6000611845858286016114fd565b9250506020611856858286016114fd565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806118a757607f821691505b6020821081036118ba576118b9611860565b5b50919050565b600081905092915050565b60006118d682611375565b6118e081856118c0565b93506118f0818560208601611391565b80840191505092915050565b600061190882856118cb565b915061191482846118cb565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b600061194782611920565b611951818561192b565b9350611961818560208601611391565b61196a816113bb565b840191505092915050565b600060808201905061198a60008301876114bc565b61199760208301866114bc565b6119a46040830185611552565b81810360608301526119b6818461193c565b905095945050505050565b6000815190506119d0816112e6565b92915050565b6000602082840312156119ec576119eb6112b0565b5b60006119fa848285016119c1565b9150509291505056fea2646970667358221220f92f73a7f6104feda8a8a8468dfe972baa0cd86174a88455be4b5e2d29f8874e64736f6c63430008140033";

type ERC721AUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721AUpgradeable__factory extends ContractFactory {
  constructor(...args: ERC721AUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721AUpgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC721AUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721AUpgradeable {
    return super.attach(address) as ERC721AUpgradeable;
  }
  override connect(signer: Signer): ERC721AUpgradeable__factory {
    return super.connect(signer) as ERC721AUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AUpgradeableInterface {
    return new utils.Interface(_abi) as ERC721AUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721AUpgradeable {
    return new Contract(address, _abi, signerOrProvider) as ERC721AUpgradeable;
  }
}
