/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ILGuardTable,
  ILGuardTableInterface,
} from "../../contracts/ILGuardTable";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainid",
        type: "uint256",
      },
    ],
    name: "ChainNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "create",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pool",
        type: "string",
      },
      {
        internalType: "string",
        name: "platform",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "autoRebalance",
        type: "bool",
      },
    ],
    name: "insert",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type ILGuardTableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ILGuardTableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ILGuardTable__factory extends ContractFactory {
  constructor(...args: ILGuardTableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ILGuardTable> {
    return super.deploy(overrides || {}) as Promise<ILGuardTable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ILGuardTable {
    return super.attach(address) as ILGuardTable;
  }
  override connect(signer: Signer): ILGuardTable__factory {
    return super.connect(signer) as ILGuardTable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ILGuardTableInterface {
    return new utils.Interface(_abi) as ILGuardTableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILGuardTable {
    return new Contract(address, _abi, signerOrProvider) as ILGuardTable;
  }
}
