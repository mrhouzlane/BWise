import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { TestTablelandController, TestTablelandControllerInterface } from "../../../contracts/test/TestTablelandController";
type TestTablelandControllerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TestTablelandController__factory extends ContractFactory {
    constructor(...args: TestTablelandControllerConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<TestTablelandController>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): TestTablelandController;
    connect(signer: Signer): TestTablelandController__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6114008061007e6000396000f3fe60806040526004361061007b5760003560e01c8063898e4aef1161004e578063898e4aef146100f35780638da5cb5b1461011d578063cefd981814610152578063f2fde38b1461017257600080fd5b80633791dc6a1461008057806366df322e146100a9578063715018a6146100bc57806383f9a5dc146100d3575b600080fd5b61009361008e366004610f9e565b610192565b6040516100a0919061102e565b60405180910390f35b6100936100b736600461110e565b6101c6565b3480156100c857600080fd5b506100d1610596565b005b3480156100df57600080fd5b506100d16100ee366004610f9e565b6105aa565b3480156100ff57600080fd5b5061010f670de0b6b3a764000081565b6040519081526020016100a0565b34801561012957600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100a0565b34801561015e57600080fd5b506100d161016d366004610f9e565b6105f9565b34801561017e57600080fd5b506100d161018d366004610f9e565b610648565b6040805160c08101825260008082526020820181905291810182905260608082018190526080820181905260a08201529080fd5b6040805160c0810182526000808252602082018190529181019190915260608082018190526080820181905260a0820152670de0b6b3a764000034101561024e576040517f7040b58c000000000000000000000000000000000000000000000000000000008152346004820152670de0b6b3a764000060248201526044015b60405180910390fd5b34670de0b6b3a7640000146102bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f746f6f206d7563682065746865722100000000000000000000000000000000006044820152606401610245565b60408051600280825260608201909252600091816020015b60608152602001906001900390816102d75750506040805160038082526080820190925291925060009190602082015b606081526020019060019003908161030757505060015460408051808201909152600681527f666f6f5f69640000000000000000000000000000000000000000000000000000602082015291925061037791879173ffffffffffffffffffffffffffffffffffffffff16906106ff565b8260008151811061038a5761038a611167565b60200260200101819052506103f785600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280600681526020017f6261725f6964000000000000000000000000000000000000000000000000000081525061095c565b8260018151811061040a5761040a611167565b6020908102919091010152604080516001808252818301909252600091816020015b606081526020019060019003908161042c5790505090506040518060400160405280600381526020017f62617a00000000000000000000000000000000000000000000000000000000008152508160008151811061048c5761048c611167565b602002602001018190525060405180602001604052806000815250826000815181106104ba576104ba611167565b60200260200101819052506040518060400160405280600781526020017f62617a203e2030000000000000000000000000000000000000000000000000008152508260018151811061050e5761050e611167565b6020026020010181905250604051806020016040528060008152508260028151811061053c5761053c611167565b60200260200101819052506040518060c0016040528060001515815260200160011515815260200160001515815260200161057685610bf4565b815260200161058484610bf4565b81526020019190915295945050505050565b61059e610cde565b6105a86000610d5f565b565b6105b2610cde565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b610601610cde565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b610650610cde565b73ffffffffffffffffffffffffffffffffffffffff81166106f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610245565b6106fc81610d5f565b50565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526060918491600091908316906370a0823190602401602060405180830381865afa158015610774573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107989190611196565b9050806000036107d4576040517f16c2671e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000846040516020016107e791906111af565b604051602081830303815290604052905060005b82811015610911576040517f2f745c5900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8981166004830152602482018390526000916108a691871690632f745c5990604401602060405180830381865afa15801561087d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a19190611196565b610dd4565b9050816000036108d95782816040516020016108c39291906111f0565b60405160208183030381529060405292506108fe565b82816040516020016108ec92919061121f565b60405160208183030381529060405292505b508061090981611277565b9150506107fb565b508060405160200161092391906112d6565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018152919052979650505050505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526060918491600091908316906370a0823190602401602060405180830381865afa1580156109d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f59190611196565b905080600003610a31576040517f3e72a67f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f8462151c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015260009190841690638462151c90602401600060405180830381865afa158015610aa1573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610ae79190810190611317565b9050600085604051602001610afc91906111af565b604051602081830303815290604052905060005b8251811015610ba8576000610b3d848381518110610b3057610b30611167565b6020026020010151610dd4565b905081600003610b70578281604051602001610b5a9291906111f0565b6040516020818303038152906040529250610b95565b8281604051602001610b8392919061121f565b60405160208183030381529060405292505b5080610ba081611277565b915050610b10565b5080604051602001610bba91906112d6565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001815291905298975050505050505050565b60608060005b8351811015610cd757838181518110610c1557610c15611167565b60200260200101515160000315610cc557815115610c8757816040518060400160405280600581526020017f20616e6420000000000000000000000000000000000000000000000000000000815250604051602001610c759291906111f0565b60405160208183030381529060405291505b81848281518110610c9a57610c9a611167565b6020026020010151604051602001610cb39291906111f0565b60405160208183030381529060405291505b80610ccf81611277565b915050610bfa565b5092915050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610245565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60606000610de183610e92565b600101905060008167ffffffffffffffff811115610e0157610e01611138565b6040519080825280601f01601f191660200182016040528015610e2b576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610e3557509392505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610edb577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310610f07576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f2557662386f26fc10000830492506010015b6305f5e1008310610f3d576305f5e100830492506008015b6127108310610f5157612710830492506004015b60648310610f63576064830492506002015b600a8310610f6f576001015b92915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610f9957600080fd5b919050565b600060208284031215610fb057600080fd5b610fb982610f75565b9392505050565b60005b83811015610fdb578181015183820152602001610fc3565b50506000910152565b60008151808452610ffc816020860160208601610fc0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080835283511515818401528084015115156040840152604084015115156060840152606084015160c0608085015261106d60e0850182610fe4565b905060808501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808684030160a08701526110a98383610fe4565b60a0880151878203830160c089015280518083529194508501925084840190600581901b8501860160005b8281101561110057848783030184526110ee828751610fe4565b958801959388019391506001016110d4565b509998505050505050505050565b6000806040838503121561112157600080fd5b61112a83610f75565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156111a857600080fd5b5051919050565b600082516111c1818460208701610fc0565b7f20696e2800000000000000000000000000000000000000000000000000000000920191825250600401919050565b60008351611202818460208801610fc0565b835190830190611216818360208801610fc0565b01949350505050565b60008351611231818460208801610fc0565b7f2c00000000000000000000000000000000000000000000000000000000000000908301908152835161126b816001840160208801610fc0565b01600101949350505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600082516112e8818460208701610fc0565b7f2900000000000000000000000000000000000000000000000000000000000000920191825250600101919050565b6000602080838503121561132a57600080fd5b825167ffffffffffffffff8082111561134257600080fd5b818501915085601f83011261135657600080fd5b81518181111561136857611368611138565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811085821117156113ab576113ab611138565b6040529182528482019250838101850191888311156113c957600080fd5b938501935b828510156113e7578451845293850193928501926113ce565b9897505050505050505056fea164736f6c6343000813000a";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "ERC721AQueryablePoliciesUnauthorized";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ERC721EnumerablePoliciesUnauthorized";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "receivedValue";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "requiredValue";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientValue";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "REQUIRED_VALUE";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "getPolicy";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bool";
                readonly name: "allowInsert";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "allowUpdate";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "allowDelete";
                readonly type: "bool";
            }, {
                readonly internalType: "string";
                readonly name: "whereClause";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "withCheck";
                readonly type: "string";
            }, {
                readonly internalType: "string[]";
                readonly name: "updatableColumns";
                readonly type: "string[]";
            }];
            readonly internalType: "struct TablelandPolicy";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "caller";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getPolicy";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bool";
                readonly name: "allowInsert";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "allowUpdate";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "allowDelete";
                readonly type: "bool";
            }, {
                readonly internalType: "string";
                readonly name: "whereClause";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "withCheck";
                readonly type: "string";
            }, {
                readonly internalType: "string[]";
                readonly name: "updatableColumns";
                readonly type: "string[]";
            }];
            readonly internalType: "struct TablelandPolicy";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "bars";
            readonly type: "address";
        }];
        readonly name: "setBars";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "foos";
            readonly type: "address";
        }];
        readonly name: "setFoos";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): TestTablelandControllerInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): TestTablelandController;
}
export {};
//# sourceMappingURL=TestTablelandController__factory.d.ts.map