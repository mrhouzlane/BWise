/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721EnumerablePolicies,
  ERC721EnumerablePoliciesInterface,
} from "../../../contracts/policies/ERC721EnumerablePolicies";

const _abi = [
  {
    inputs: [],
    name: "ERC721EnumerablePoliciesUnauthorized",
    type: "error",
  },
] as const;

const _bytecode =
  "0x602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000813000a";

type ERC721EnumerablePoliciesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721EnumerablePoliciesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721EnumerablePolicies__factory extends ContractFactory {
  constructor(...args: ERC721EnumerablePoliciesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721EnumerablePolicies> {
    return super.deploy(overrides || {}) as Promise<ERC721EnumerablePolicies>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721EnumerablePolicies {
    return super.attach(address) as ERC721EnumerablePolicies;
  }
  override connect(signer: Signer): ERC721EnumerablePolicies__factory {
    return super.connect(signer) as ERC721EnumerablePolicies__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721EnumerablePoliciesInterface {
    return new utils.Interface(_abi) as ERC721EnumerablePoliciesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721EnumerablePolicies {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721EnumerablePolicies;
  }
}
