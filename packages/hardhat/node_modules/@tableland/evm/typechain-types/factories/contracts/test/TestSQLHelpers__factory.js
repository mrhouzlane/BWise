"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestSQLHelpers__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "string",
                name: "input",
                type: "string",
            },
        ],
        name: "quote",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "prefix",
                type: "string",
            },
            {
                internalType: "uint256",
                name: "tableId",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "columns",
                type: "string",
            },
            {
                internalType: "string[]",
                name: "values",
                type: "string[]",
            },
        ],
        name: "toBatchInsert",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "schema",
                type: "string",
            },
            {
                internalType: "string",
                name: "prefix",
                type: "string",
            },
        ],
        name: "toCreateFromSchema",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "prefix",
                type: "string",
            },
            {
                internalType: "uint256",
                name: "tableId",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "filters",
                type: "string",
            },
        ],
        name: "toDelete",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "prefix",
                type: "string",
            },
            {
                internalType: "uint256",
                name: "tableId",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "columns",
                type: "string",
            },
            {
                internalType: "string",
                name: "values",
                type: "string",
            },
        ],
        name: "toInsert",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "prefix",
                type: "string",
            },
            {
                internalType: "uint256",
                name: "tableId",
                type: "uint256",
            },
        ],
        name: "toNameFromId",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "prefix",
                type: "string",
            },
            {
                internalType: "uint256",
                name: "tableId",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "setters",
                type: "string",
            },
            {
                internalType: "string",
                name: "filters",
                type: "string",
            },
        ],
        name: "toUpdate",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "";
const isSuperArgs = (xs) => xs.length > 1;
class TestSQLHelpers__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
TestSQLHelpers__factory.bytecode = _bytecode;
TestSQLHelpers__factory.abi = _abi;
exports.TestSQLHelpers__factory = TestSQLHelpers__factory;
//# sourceMappingURL=TestSQLHelpers__factory.js.map